# Generated by Django 3.2.4 on 2021-06-29 12:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0023_add_choose_permissions'),
        ('blog', '0008_blogpage_categories'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailcore', '0062_comment_models_and_pagesubscription'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('address_street', models.CharField(blank=True, max_length=256, null=True, verbose_name='Street')),
                ('address_city', models.CharField(blank=True, max_length=128, null=True, verbose_name='City')),
                ('address_zip', models.CharField(blank=True, max_length=32, null=True, verbose_name='Zip Code')),
                ('address_country', models.CharField(blank=True, max_length=64, null=True, verbose_name='Country')),
                ('address_website', models.URLField(blank=True, null=True, verbose_name='Web Site')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='OfferPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('description', models.CharField(blank=True, max_length=512, null=True, verbose_name='Description')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Draft'), (2, 'Published'), (3, 'Archived')], default=1)),
            ],
            options={
                'verbose_name': 'Offer',
                'verbose_name_plural': 'Offers',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PropertyAssetPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('address_street', models.CharField(max_length=256, verbose_name='Street')),
                ('address_zip', models.CharField(max_length=32, verbose_name='Zip Code')),
                ('address_city', models.CharField(max_length=128, verbose_name='City')),
                ('address_country', models.CharField(default='France', max_length=64, verbose_name='Country')),
                ('asset_value', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Value')),
                ('asset_surface', models.DecimalField(decimal_places=0, max_digits=4, verbose_name='Surface')),
                ('short_description', models.CharField(max_length=64, verbose_name='Short Description')),
                ('description', models.CharField(blank=True, max_length=512, null=True, verbose_name='Description')),
                ('asset_owner', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Property Asset',
                'verbose_name_plural': 'Property Assets',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PropertyAssetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': 'Asset Type',
                'verbose_name_plural': 'Asset Types',
            },
        ),
        migrations.CreateModel(
            name='AgencyPage',
            fields=[
                ('addresspage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='realestate.addresspage')),
                ('agency_name', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Agency',
                'verbose_name_plural': 'Agencies',
            },
            bases=('realestate.addresspage',),
        ),
        migrations.CreateModel(
            name='RentalOfferPage',
            fields=[
                ('offerpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='realestate.offerpage')),
                ('deposit', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Deposit')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
            ],
            options={
                'verbose_name': 'Rental Offer',
                'verbose_name_plural': 'Rental Offers',
            },
            bases=('realestate.offerpage',),
        ),
        migrations.CreateModel(
            name='SaleOfferPage',
            fields=[
                ('offerpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='realestate.offerpage')),
            ],
            options={
                'verbose_name': 'Sale Offer',
                'verbose_name_plural': 'Sale Offers',
            },
            bases=('realestate.offerpage',),
        ),
        migrations.CreateModel(
            name='PropertyAssetPageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='realestate.propertyassetpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='realestate_propertyassetpagetag_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='propertyassetpage',
            name='asset_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='realestate.propertyassettype', verbose_name='Asset Type'),
        ),
        migrations.AddField(
            model_name='propertyassetpage',
            name='categories',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='blog.BlogCategory'),
        ),
        migrations.AddField(
            model_name='propertyassetpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='realestate.PropertyAssetPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='PageGalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='realestate.propertyassetpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OfferPageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='realestate.offerpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='realestate_offerpagetag_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='offerpage',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='realestate.propertyassetpage', verbose_name='Property Asset'),
        ),
        migrations.AddField(
            model_name='offerpage',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='realestate.agencypage', verbose_name='Agency'),
        ),
    ]
